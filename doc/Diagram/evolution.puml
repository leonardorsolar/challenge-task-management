@startuml
title Arquitetura de Microserviços - Gerenciador de Tarefas (com RabbitMQ)

' Frontend
component "React App\n(Interface do Usuário)" as Frontend

' Backend principal
component "API Node.js\n(Gestão de Tarefas e Usuários)" as NodeAPI

' Microserviços
component "Análise de Produtividade\n(Python + Pandas)" as PythonService
component "Relatórios e Notificações\n(Java + Spring Boot)" as JavaService

' Banco de dados
database "Banco de Dados\n(PostgreSQL / SQLite)" as DB

' Firebase
cloud "Firebase\n(Auth + Firestore)" as Firebase

' RabbitMQ
queue "RabbitMQ\n(Broker de Mensagens)" as MQ

' Relações
Frontend --> Firebase : Login / Token JWT
Frontend --> NodeAPI : HTTP (axios/fetch)\ncom Token JWT
NodeAPI --> Firebase : Verificar token / Buscar perfil
NodeAPI --> DB : SQL (ORM)

' Com RabbitMQ
NodeAPI --> MQ : Envia mensagens\n(ex: nova tarefa, gerar relatório)
PythonService --> MQ : Consome mensagens\n(task.analytics)
JavaService --> MQ : Consome mensagens\n(report.generate)

@enduml
